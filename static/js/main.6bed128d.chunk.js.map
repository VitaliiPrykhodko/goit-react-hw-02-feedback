{"version":3,"sources":["Statistics/Statistics.jsx","FeedbackOptions/FeedbackOptions.jsx","Section/Section.jsx","Notification/Notification.jsx","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positive","className","defaultProps","FeedbackOptions","options","onLeaveFeedback","console","log","map","option","i","type","onClick","Section","title","children","Notification","message","App","state","handleClickButton","nameBtn","setState","countTotalFeedback","Object","values","this","reduce","acc","stat","Math","floor","keys","countPositiveFeedbackPercentage","Component","ReactDOM","render","document","getElementById"],"mappings":"8OAEMA,EAAa,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,IAAKC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/C,OACE,0BAASC,UAAU,aAAnB,UACE,4CACA,qBAAIA,UAAU,kBAAd,UACE,6BACE,uCAAUL,OAEZ,6BACE,0CAAaC,OAEf,6BACE,sCAASC,OAEX,6BACE,wCAAWC,EAAX,SAEF,6BACE,oDAAuBC,EAAvB,gBAOVL,EAAWO,aAAe,CACxBH,MAAO,EACPC,SAAU,GAWGL,QCpBAQ,EAlBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAElC,OADAC,QAAQC,IAAIH,GAEV,qBAAKH,UAAU,YAAf,SACGG,EAAQI,KAAI,SAACC,EAAQC,GAAT,OACX,wBAAQT,UAAU,MAAMU,KAAK,SAAiBC,QAAS,kBAAIP,EAAgBI,IAA3E,SACGA,GADwCC,SCSpCG,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASd,UAAU,UAAnB,UACE,6BAAKa,IACJC,MCMQC,EAVM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,qBAAKhB,UAAU,eAAf,SACE,mBAAGA,UAAU,uBAAb,SAAqCgB,OCGnCC,E,4MACJC,MAAQ,CACNvB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPsB,kBAAoB,SAACC,GACnB,EAAKC,SAAL,eACKD,EAAU,EAAKF,MAAME,GAAW,GACnC,EAAKE,qB,wDAIT,WACE,OAAOC,OAAOC,OAAOC,KAAKP,OAAOQ,QAAO,SAACC,EAAKC,GAE5C,OADAD,GAAOC,IAEN,K,6CAGL,WACE,OAAOC,KAAKC,MAAOL,KAAKP,MAAMvB,KAAO8B,KAAKH,qBAAwB,O,oBAGpE,WACE,MAA+BG,KAAKP,MAA5BvB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,sBAAKG,UAAU,MAAf,UACE,cAAC,EAAD,CAASa,MAAM,wBAAf,SACE,cAAC,EAAD,CACEV,QAASoB,OAAOQ,KAAKN,KAAKP,OAC1Bd,gBAAiBqB,KAAKN,sBAG1B,cAAC,EAAD,UACIM,KAAKH,qBAAqB,cAAC,EAAD,CAC1B3B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO2B,KAAKH,qBACZvB,SAAU0B,KAAKO,oCACX,cAAC,EAAD,CAAchB,QAAQ,+B,GA1CpBiB,aAiDHhB,I,MCnDfiB,IAASC,OACL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.6bed128d.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positive }) => {\r\n  return (\r\n    <section className=\"Statistics\">\r\n      <h2>Statistics</h2>\r\n      <ul className=\"statistics_list\">\r\n        <li>\r\n          <p>Good: {good}</p>\r\n        </li>\r\n        <li>\r\n          <p>Neutral: {neutral}</p>\r\n        </li>\r\n        <li>\r\n          <p>Bad: {bad}</p>\r\n        </li>\r\n        <li>\r\n          <p>Total: {total} </p>\r\n        </li>\r\n        <li>\r\n          <p>Positive feedback: {positive}%</p>\r\n        </li>\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistics.defaultProps = {\r\n  total: 0,\r\n  positive: 0,\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positive: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  console.log(options);\r\n  return (\r\n    <div className=\"buttonBox\">\r\n      {options.map((option, i) => (\r\n        <button className=\"btn\" type=\"button\" key={i} onClick={()=>onLeaveFeedback(option)}>\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired\r\n}\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className=\"section\">\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node\r\n}\r\n\r\nexport default Section","import PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => (\r\n  <div className=\"notification\">\r\n    <p className=\"notification_message\">{message}</p>\r\n  </div>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\nimport Statistics from \"./Statistics/Statistics.jsx\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions.jsx\";\nimport Section from \"./Section/Section\";\nimport Notification from \"./Notification/Notification.jsx\"\n\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleClickButton = (nameBtn) => {\n    this.setState(\n      { [nameBtn]: this.state[nameBtn] + 1 },\n      this.countTotalFeedback\n    );\n  };\n\n  countTotalFeedback() {\n    return Object.values(this.state).reduce((acc, stat) => {\n      acc += stat;\n      return acc;\n    }, 0);\n  }\n\n  countPositiveFeedbackPercentage() {\n    return Math.floor((this.state.good / this.countTotalFeedback()) * 100);\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.handleClickButton}\n          />\n        </Section>\n        <Section>\n          { this.countTotalFeedback()?<Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positive={this.countPositiveFeedbackPercentage()}\n          /> :  <Notification message=\"No feedback given\"/>}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './main.scss'\n\nReactDOM.render(\n    <App\n    />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}